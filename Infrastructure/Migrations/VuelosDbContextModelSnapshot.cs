// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VuelosDbContext))]
    partial class VuelosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Domain.Entities.Pasajeros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NroDoc")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ReservasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ReservasId");

                    b.ToTable("Pasajeros");

                    b.HasDiscriminator().HasValue("Pasajeros");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Vuelos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origen")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("ReservasVuelos", b =>
                {
                    b.Property<int>("ReservasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VuelosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservasId", "VuelosId");

                    b.HasIndex("VuelosId");

                    b.ToTable("ReservasVuelos");
                });

            modelBuilder.Entity("Domain.Entities.Reservas", b =>
                {
                    b.HasBaseType("Domain.Entities.Pasajeros");

                    b.Property<bool>("EstadoReserva")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Reservas");
                });

            modelBuilder.Entity("Domain.Entities.Pasajeros", b =>
                {
                    b.HasOne("Domain.Entities.Reservas", null)
                        .WithMany("Pasajeros")
                        .HasForeignKey("ReservasId");
                });

            modelBuilder.Entity("ReservasVuelos", b =>
                {
                    b.HasOne("Domain.Entities.Reservas", null)
                        .WithMany()
                        .HasForeignKey("ReservasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Vuelos", null)
                        .WithMany()
                        .HasForeignKey("VuelosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Reservas", b =>
                {
                    b.Navigation("Pasajeros");
                });
#pragma warning restore 612, 618
        }
    }
}
