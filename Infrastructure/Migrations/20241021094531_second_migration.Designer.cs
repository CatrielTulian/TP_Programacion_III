// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VuelosDbContext))]
    [Migration("20241021094531_second_migration")]
    partial class second_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Domain.Entities.Pasajeros", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NroDoc")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Pasajeros");
                });

            modelBuilder.Entity("Domain.Entities.Reservas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EstadoReserva")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Domain.Entities.Vuelos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Capacidad")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Destino")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaLlegada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origen")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vuelos");
                });

            modelBuilder.Entity("PasajerosReservas", b =>
                {
                    b.Property<int>("PasajerosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PasajerosId", "ReservasId");

                    b.HasIndex("ReservasId");

                    b.ToTable("PasajerosReservas");
                });

            modelBuilder.Entity("ReservasVuelos", b =>
                {
                    b.Property<int>("ReservasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VuelosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservasId", "VuelosId");

                    b.HasIndex("VuelosId");

                    b.ToTable("ReservasVuelos");
                });

            modelBuilder.Entity("PasajerosReservas", b =>
                {
                    b.HasOne("Domain.Entities.Pasajeros", null)
                        .WithMany()
                        .HasForeignKey("PasajerosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Reservas", null)
                        .WithMany()
                        .HasForeignKey("ReservasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReservasVuelos", b =>
                {
                    b.HasOne("Domain.Entities.Reservas", null)
                        .WithMany()
                        .HasForeignKey("ReservasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Vuelos", null)
                        .WithMany()
                        .HasForeignKey("VuelosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
